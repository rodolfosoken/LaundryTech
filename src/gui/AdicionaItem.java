/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import DAO.BD;
import DAO.DAO_roupa;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodolfo
 */
public class AdicionaItem extends javax.swing.JFrame {

    public String[] roupa = new String[4];
    private int codigo;
    static BD bd;
    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form AdicionaItem
     */
    public AdicionaItem() {
        initComponents();
        this.setVisible(true);
        bd = BD.getBD();

        //lista roupas
        modelo = listaRoupa();
        tabela.setModel(modelo);
        //listener
        tabela.addKeyListener(new keyAct());
        tabela.addMouseListener(new clickAct());
        JTpesquisa.addKeyListener(new keyAct());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTpesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        ok = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        quantidade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        descricao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisa");

        jLabel1.setText("Procurar :");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel2.setText("Qtd.");
        jLabel2.setToolTipText("");

        quantidade.setText("1");
        quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição");

        descricao.setEditable(false);
        descricao.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTpesquisa)
                            .addComponent(descricao))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        if (roupa[0] != null) {
            roupa[3] = quantidade.getText();
            dispose();
        }else{
            JOptionPane.showMessageDialog(null, "nenhum item selecionado");
        }

    }//GEN-LAST:event_okActionPerformed

    private void quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionaItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionaItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionaItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionaItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdicionaItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTpesquisa;
    private javax.swing.JTextField descricao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok;
    private javax.swing.JTextField quantidade;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the codigo
     */
    public int getCodigo() {
        return codigo;
    }

    /**
     * @param codigo the codigo to set
     */
    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }

    class keyAct implements KeyListener {

        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                //CadastraCliente cadastra = new CadastraCliente(String.valueOf(JTpesquisa.getText()));
                tabela.setRowSelectionInterval(0, 0);
                roupa[0] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 0));
                roupa[1] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 1));
                roupa[2] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 2));
                roupa[3] = quantidade.getText();

                descricao.setText(roupa[1]);

            }
            if ((e.getKeyCode() == KeyEvent.VK_ENTER) && (e.getSource() == tabela)) {
                tabela.setFocusCycleRoot(true);
                roupa[0] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 0));
                roupa[1] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 1));
                roupa[2] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 2));
                roupa[3] = quantidade.getText();

                //VisualizaCliente exibi = new VisualizaCliente(ControleCliente.consultaCliente(tabela.getSelectedRow()));
                // exibi.setVisible(true);
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
            if (JTpesquisa.getText() != null) {
                String descricao = JTpesquisa.getText();
                tabela.setModel(procuraRoupa(descricao));
            }

        }
    }

    class clickAct implements MouseListener {

        @Override
        public void mouseClicked(java.awt.event.MouseEvent me) {
            roupa[0] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 0));
            roupa[1] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 1));
            roupa[2] = String.valueOf(tabela.getValueAt(tabela.getSelectedRow(), 2));
            roupa[3] = quantidade.getText();

            descricao.setText(roupa[1]);

            //dispose();
        }

        @Override
        public void mousePressed(java.awt.event.MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseReleased(java.awt.event.MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseEntered(java.awt.event.MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent me) {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

    }

    public DefaultTableModel listaRoupa() {

        modelo.setColumnIdentifiers(new Object[]{"Codigo", "Descricao", "Preco", "Medida"});
        modelo.setNumRows(0);
        try {
            bd.ExecuteQuery("SELECT * FROM laundrytech.roupas");
            bd.rs.first();
            do {
                try {

                    modelo.addRow(new Object[]{
                        bd.rs.getObject("codRoupa"), bd.rs.getObject("descricao"),
                        bd.rs.getObject("preco"), bd.rs.getObject("medida"),});
                } catch (SQLException ex) {
                    Logger.getLogger(DAO_roupa.class.getName()).log(Level.SEVERE, null, ex);
                }
            } while (bd.rs.next());

        } catch (SQLException ex) {
            Logger.getLogger(DAO_roupa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return modelo;
    }

    public DefaultTableModel procuraRoupa(String descricao) {

        String SQL_full = "SELECT * FROM laundrytech.roupas WHERE descricao LIKE '%" + descricao + "%'";
        //faz a busca no banco de dados
        try {
            //remove as linhas da consulta anterior    
            modelo.setNumRows(0);

            bd.ExecuteQuery(SQL_full);
            while (bd.rs.next()) {
                modelo.addRow(
                        new Object[]{
                            bd.rs.getObject("codRoupa"), bd.rs.getObject("descricao"),
                            bd.rs.getObject("preco"), bd.rs.getObject("medida"),});
            }

        } catch (SQLException ex) {
            Logger.getLogger(DAO_roupa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return modelo;
    }

}
